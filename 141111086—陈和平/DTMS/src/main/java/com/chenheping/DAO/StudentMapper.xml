<?xml version="1.1" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chenheping.DAO.StudentMapper" >
    <resultMap id="BaseResultMap" type="com.chenheping.domin.Student" >
        <id column="student_id" property="student_id" jdbcType="INTEGER" />
        <result column="s_username" property="s_username" jdbcType="VARCHAR" />
        <result column="s_password" property="s_password" jdbcType="VARCHAR" />
        <result column="s_phone" property="s_phone" jdbcType="VARCHAR" />
        <result column="s_sex" property="s_sex" jdbcType="VARCHAR" />
        <result column="s_time" property="s_time" jdbcType="TIMESTAMP" />
        <result column="s_name" property="s_name" jdbcType="VARCHAR" />
        <result column="s_result" property="s_result" jdbcType="VARCHAR" />
        <result column="s_coach" property="s_coach" jdbcType="VARCHAR" />
        <result column="s_discount" property="s_discount" jdbcType="VARCHAR" />
        <result column="s_free_statue" property="s_free_statue" jdbcType="VARCHAR" />
        <result column="s_c_type" property="s_c_type" jdbcType="VARCHAR" />
        <result column="s_statue" property="s_statue" jdbcType="VARCHAR" />
        <result column="s_d_address" property="s_d_address" jdbcType="VARCHAR" />
        <result column="s_address" property="s_address" jdbcType="VARCHAR" />
        <result column="s_cardid" property="s_cardid" jdbcType="VARCHAR" />
        <result column="s_age" property="s_age" jdbcType="VARCHAR" />
    </resultMap>


    <sql id="Base_Column_List" >
       student_id, s_username,s_password, s_phone, s_sex, s_time, s_name, s_result, s_coach, s_discount, s_free_statue, s_c_type, s_statue, s_d_address, s_address, s_cardid, s_age
    </sql>
    <!-- 根据管理员ID查询管理员信息-->
    <select id="selectByStudentId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from student
        where student_id = #{student_id,jdbcType=INTEGER}
    </select>

    <update id="updateByStudentId" parameterType="com.chenheping.domin.Student">
        UPDATE student
        SET student.s_sex = #{s_sex},
        student.s_username = #{s_username},
        student.s_phone = #{s_phone},
        student.s_coach = #{s_coach},
        student.s_time = #{s_time},
        student.s_result = #{s_result},
        student.s_address = #{s_address},
        student.s_d_address = #{s_d_address},
        student.s_statue = #{s_statue},
        student.s_c_type = #{s_c_type},
        student.s_free_statue = #{s_free_statue},
        student.s_discount = #{s_discount}
        WHERE  student.student_id = #{student_id};
    </update>

    <!-- 查询所有管理员信息-->
    <select id="selectAllStudent" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from student
    </select>

    <!--根据用户名和密码查找用户-->
    <select id="selectByNameAndPass" resultMap="BaseResultMap" >
      SELECT <include refid="Base_Column_List" />
        FROM student
        WHERE s_username = #{username} and s_password = #{password}
    </select>

    <!-- 根据管理员id删除管理员-->
    <delete id="deleteByStudentId" parameterType="java.lang.Integer" >
        delete from student
        where student_id = #{student_id,jdbcType=INTEGER}
    </delete>

    <!--添加管理员信息-->
    <insert id="insert" parameterType="com.chenheping.domin.Student" >
        insert into student (student_id, s_username,s_password, s_phone, s_sex, s_time, s_name, s_result, s_coach, s_discount, sfree_statue, s_c_type, s_statue, s_d_address, s_address, s_cardid, s_age)
        values (#{student_id},#{s_username},#{s_password},#{s_phone},#{s_sex},#{s_time},#{s_name},#{s_result},#{s_coach},#{s_discount},#{s_free_statue},#{s_c_type},#{s_statue},#{s_d_address},#{s_address},#{s_cardid},#{s_age}}
         )
    </insert>

</mapper>

